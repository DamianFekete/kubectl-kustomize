name: Release
on: push
jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Prepare checking latest kubectl version
      run: docker build . -t devholic/kubectl-kustomize:kubectl-version --target latest-kubectl-version
    - name: Check latest kubectl version
      id: kubectl
      run: |
        if version=$(docker run devholic/kubectl-kustomize:kubectl-version); then
          echo ::set-output name=version::$version
        else
          exit 1
        fi
    - name: Prepare checking latest kustomize version
      run: docker build . -t devholic/kubectl-kustomize:kustomize-version --target latest-kustomize-version
    - name: Check latest kustomize version
      id: kustomize
      run: |
        if version=$(docker run devholic/kubectl-kustomize:kustomize-version); then
          echo ::set-output name=version::$version
        else
          exit 1
        fi
    - name: Check image exists on registry
      id: image_existence
      env:
        IMAGE_TAG: ${{ format('{0}-{1}', steps.kubectl.outputs.version, steps.kustomize.outputs.version) }}
      shell: bash +e {0}
      run: |
        echo ::set-output name=tag::${IMAGE_TAG}
        result="$(DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect devholic/kubectl-kustomize:${IMAGE_TAG} 2>&1)"
        if [[ $? -eq 0 ]]; then
          echo ::set-output name=exists::true
        elif [[ $result == *"no such manifest"* ]]; then
          echo ::set-output name=exists::false
        else
          echo $result
          exit 1;
        fi
    - name: Build image
      id: build
      if: steps.image_existence.outputs.exists == 'false'
      env:
        IMAGE_TAG: ${{ steps.image_existence.outputs.tag }}
        KUBECTL_VERSION: ${{ steps.kubectl.outputs.version }}
        KUSTOMIZE_VERSION: ${{ steps.kustomize.outputs.version }}
      run: |
        docker build . -t devholic/kubectl-kustomize:${IMAGE_TAG} \
          --build-arg KUBECTL_VERSION=${KUBECTL_VERSION} \
          --build-arg KUSTOMIZE_VERSION=${KUSTOMIZE_VERSION}
        docker tag devholic/kubectl-kustomize:${IMAGE_TAG} devholic/kubectl-kustomize:latest
        echo ::set-output name=tag::${IMAGE_TAG}
    - name: Login to Docker Hub
      if: steps.build.outputs.tag
      uses: azure/docker-login@v1
      with:
        username: devholic
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push image
      if: steps.build.outputs.tag
      env:
        IMAGE_TAG: ${{ steps.build.outputs.tag }}
      run: |
        docker push devholic/kubectl-kustomize:${IMAGE_TAG}
        docker push devholic/kubectl-kustomize:latest
